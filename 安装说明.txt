#firewall
查看防火墙的状态
firewall-cmd --state
开启防火墙
systemctl start firewalld.service
开启8080端口
firewall-cmd --zone=public --add-port=8080/tcp --permanent

--zone=public：表示作用域为公共的；
--add-port=8080/tcp：添加tcp协议的端口8080；
--permanent：永久生效，如果没有此参数，则只能维持当前服务生命周期内，重新启动后失效；

1、开放端口

firewall-cmd --zone=public --add-port=8088/tcp --permanent   # 开放8088端口

firewall-cmd --zone=public --remove-port=5672/tcp --permanent  #关闭5672端口

firewall-cmd --reload   # 配置立即生效

2、查看防火墙所有开放的端口

firewall-cmd --zone=public --list-ports

3.、关闭防火墙

如果要开放的端口太多，嫌麻烦，可以关闭防火墙，安全性自行评估

systemctl stop firewalld.service

5、查看监听的端口

netstat -lnpt

6、检查端口被哪个进程占用

netstat -lnpt |grep 5672

7、查看进程的详细信息

ps 6832

#jenkins
systemctl start jenkins.service 启动jenkins
systemctl enable jenkins.service 设置jenkins开机启动
systemctl stop jenkins.service 关闭jenkins
systemctl status jenkins.service 查看jenkins的状态

彻底卸载jenkins

service jenkins stop
yum clean all
yum -y remove jenkins
rm -rf /var/cache/jenkins
rm -rf /var/lib/jenkins/

jenkins 安装地址 https://www.cnblogs.com/rmxd/p/11609983.html

centos7删除自带openjdk
   https://www.cnblogs.com/ystq/p/5972608.html

#配置zk开机自启
 cd /etc/init.d
 touch zookeeper
 chmod +x zookeeper
 vim zookeeper

#!/bin/bash
# chkconfig:35 81 82
# description:zookeeper server script
export JAVA_HOME=/usr/local/java/jdk1.8.0_11
export PATH=$JAVA_HOME/bin:$PATH
case $1 in
        start) su root /home/zk/zookeeper-3.4.11/bin/zkServer.sh start;;
        stop)  su root /home/zk/zookeeper-3.4.11/bin/zkServer.sh stop;;
        status) su root /home/zk/zookeeper-3.4.11/bin/zkServer.sh status;;
        restart) su root /home/zk/zookeeper-3.4.11/bin/zkServer.sh restart;;
        *) echo "require start|stop|status|restart";;
esac

chkconfig --add zookeeper
chkconfig zookeeper on
#配置zk开机自启

#配置dubboAdmin开机自启
cd /usr/lib/systemd/system/
touch dubboAdmin.service
vim dubboAdmin.service

vim start.sh

#!/bin/sh
export PATH=$JAVA_HOME/bin:$PATH
nohup java -jar /home/dubbo/dubbo-admin-server-0.1.jar >/dev/null  &
echo $! > /var/run/dubbo-amdin.pid

vim stop.sh

#!/bin/sh
PID=$(cat /var/run/dubbo-amdin.pid)
kill -9 $PID

chmod +x start.sh stop.sh

#!/bin/sh
[Unit]
Description=dubboAdmin-service
After=syslog.target network.target remote-fs.target nss-lookup.target
[Service]
Type=forking
ExecStart=/root/app/reboot_shell/duboo_amdin/start.sh
ExecStop=/root/app/reboot_shell/duboo_amdin/stop.sh
PrivateTmp=true
[Install]
WantedBy=multi-user.target

systemctl enable dubboAdmin.service

#配置dubboAdmin开机自启

systemctl enable xxx.service 设置某个服务开机启动
systemctl disable xxx.service 设置取消某个服务开机启动
systemctl stop xxx.service 关闭某个服务
systemctl status xxx.service 查看某个服务状态

clean -Dmaven.test.skip=true install -P local_prod -f pom.xml

-Djetty.port=8083  -DproxyType=4 -DproxyHost=172.16.1.245 -DproxyPort=8080 -DproxySet=true

mvn install:install-file -Dfile=E:\lllllllllllllllllll\magpie\magpie\1.1.13.Final\magpie-1.1.13.Final.jar -DgroupId=com.unionpay.magpie -DartifactId=magpie -Dversion=1.1.13.Final -Dpackaging=jar

WINDOWS上KAFKA运行环境安装 https://www.cnblogs.com/lnice/p/9668750.html

nginx整合fastdfs
./configure \
--prefix=/usr/local/nginx \
--pid-path=/var/run/nginx/nginx.pid \
--lock-path=/var/lock/nginx.lock \
--error-log-path=/var/log/nginx/error.log \
--http-log-path=/var/log/nginx/access.log \
--with-http_gzip_static_module \
--http-client-body-temp-path=/var/temp/nginx/client \
--http-proxy-temp-path=/var/temp/nginx/proxy \
--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \
--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \
--http-scgi-temp-path=/var/temp/nginx/scgi \
--add-module=/usr/local/fastdfs-nginx-module/src


